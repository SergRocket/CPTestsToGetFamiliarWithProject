package Utils.Enums.Data.TestData;

import Utils.Enums.Currency;
import Utils.Enums.ObjectUtils;

import java.math.BigDecimal;
import java.util.List;
import java.util.Objects;
import java.util.stream.Collectors;

public class UserData extends LoginData {
    private ResellerData resellerData; //related reseller data

    private String name;
    private String id;
    private String batchNumber;
    private Currency currency;
    private String partnerName;
    private String country;
    private String phoneNumber;
    private String roleName;
    private String walletBalance;
    private List<Wallet> wallets;
    private BigDecimal cloudOpsBalance;
    private BigDecimal totalAccountUsages;
    private List<AccountData> accounts;

    public UserData expandWith(UserData userData) {
        return ObjectUtils.expandObjectProperties(this, userData);
    }

    public UserData(String email, String password) {
        this(email);
        this.password = Objects.requireNonNull(password);
    }

    public UserData(String email) {
        this.email = Objects.requireNonNull(email);
    }

    public UserData() {

    }

    public void setEmail(String email) {
        this.email = email;
    }

    public void setAutoGeneratedPassword(String password) {
        this.password = password;
    }

    public String getId() {
        return id;
    }

    public String getBatchNumber() {
        return batchNumber;
    }

    public String getName() {
        return name;
    }

    /**
     * Also it will set the current user data to the each account from 'accounts'
     * @return
     */
    public List<AccountData> getAccounts() {
        if (accounts != null)
            accounts = accounts.stream()
                    .peek(accountData -> accountData.setUserData(this))//save reference to user
                    .collect(Collectors.toList());
        return accounts;
    }

    public void setAccounts(List<AccountData> accounts) {
        this.accounts = accounts;
    }

    public ResellerData getResellerData() {
        return resellerData;
    }

    public void setResellerData(ResellerData resellerData) {
        this.resellerData = resellerData;
    }

    public String getWalletBalance() {
        return walletBalance;
    }

    public void setWalletBalance(String walletBalance) {
        this.walletBalance = walletBalance;
    }

    public void setAvailableBalance(String availableBalance) {
        this.walletBalance = availableBalance.equalsIgnoreCase("Suspended") ? "0" : availableBalance;
    }

    public String getEmail() {
        return email;
    }

    public void setName(String name) {
        this.name = name;
    }

    public void setId(String id) {
        this.id = id;
    }

    public void setBatchNumber(String batchNumber) {
        this.batchNumber = batchNumber;
    }

    public String getCountry() {
        return country;
    }

    public void setCountry(String country) {
        this.country = country;
    }

    public String getPhoneNumber() {
        return phoneNumber;
    }

    public void setPhoneNumber(String phoneNumber) {
        this.phoneNumber = phoneNumber;
    }

    public String getRoleName() {
        return roleName;
    }

    public void setRoleName(String roleName) {
        this.roleName = roleName;
    }

    public Currency getCurrency() {
        return currency;
    }

    public void setCurrency(String currency) {
        this.currency = Currency.from(currency);
    }

    public String getPartnerName() {
        return partnerName;
    }

    public void setPartnerName(String partnerName) {
        this.partnerName = partnerName;
    }

    public BigDecimal getTotalAccountUsages() {
        return totalAccountUsages;
    }

    public void setTotalAccountUsages(BigDecimal totalAccountUsages) {
        this.totalAccountUsages = totalAccountUsages;
    }

    public List<Wallet> getWallets() {
        return wallets;
    }

    public void setWallets(List<Wallet> wallets) {
        this.wallets = wallets;
    }

    public BigDecimal getCloudOpsBalance() {
        return cloudOpsBalance;
    }

    public void setCloudOpsBalance(BigDecimal cloudOpsBalance) {
        this.cloudOpsBalance = cloudOpsBalance;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;
        UserData that = (UserData) o;
        return Objects.equals(id, that.getId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(id);
    }

    @Override
    public String toString() {
        return ObjectUtils.createToString(id, email);
    }
}
